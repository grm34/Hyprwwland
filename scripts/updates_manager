#!/usr/bin/env bash
# Hyprwwland Copyright (c) 2023 darkmaster grm34.
# https://github.com/grm34/Hyprwwland


function aur_helper() {
  ! pidof -sxq "$aur_helper" &&
    [[ $1 ]] && nohup "$(echo "n" | sudo "$aur_helper")"
  ! pidof -sxq "$aur_helper" &&
    : "$(sudo "$aur_helper" -Qu | wc -l)"
  ! [[ $_ =~ ^[0-9]+$ ]] && : 0
  printf '%s' "$_"
}


function notify_user() {
  case $1 in
    check) : "Checking for new updates..." ;;
    down)  : "Waiting for network..." ;;
    nb)    : "Arch Linux pending updates: $2" ;;
    up)    : "Arch Linux is already up to date !"
  esac
  dunstify -i "pacman" "$_"
}


# Get required settings from config.json.
readarray -t config < <(
  jaq '.aur_helper, .terminal_cmd' "$PWD/config.json")
aur_helper="${config[0]//\"}"
terminal_cmd="${config[1]//\"}"


# Handle requests.
case $1 in
  update)
    : "$(aur_helper)"
    if (( _ == 0 )); then
      notify_user "up"
    else
      eval "$terminal_cmd" sudo "$aur_helper" &
      : "$(aur_helper)"
    fi
    printf '%s' "$_"
    ;;
  check)
    notify_user "check"
    : "$(aur_helper full)"
    [[ $_ == 0 ]] && : "up"
    notify_user "nb" "$_"
    printf '%s' "$_"
    canberra-gtk-play -i "window-question"
    ;;
  *)
    : "$(aur_helper full)"
    printf '%s' "$_"
    ;;
esac

