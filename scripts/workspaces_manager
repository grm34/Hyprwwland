#!/usr/bin/env bash
# Hyprwwland Copyright (c) 2023 darkmaster grm34.
# https://github.com/grm34/Hyprwwland


function eww_update() {
  : "$(eww get workspaces)"
  printf '%s' "$_" | jaq -c --arg value "$1" "$2"
}

function update_occupied_workspaces() {
  local occupied id
  readarray -t occupied < <(hyprctl workspaces -j | jaq '.[]?.id?')
  for id in "${occupied[@]}"; do
    if [[ $id != "$1" ]]; then
      id=$((id-1))
      eww_update "ws-occupied" "(.[$id].class|=\$value)"
    fi
  done
}

function handle() {
  case $1 in
    workspace*|createworkspace*)
      id=$((${1##*>>}-1))
      eww_update "ws-active" "(.[$id].class|=\$value)"
      update_occupied_workspaces "${1##*>>}"
      ;;
    destroyworkspace*)
      id=$((${1##*>>}-1))
      eww_update "ws-inactive" "(.[$id].class|=\$value)"
      ;;
  esac
}


# On start: update workspaces status.
active="$(hyprctl monitors -j | jaq '.[].activeWorkspace.id')"
id=$((active-1))
eww_update "ws-active" "(.[$id].class|=\$value)"
update_occupied_workspaces "$active"


# Listen UNIX Socket for events (IPC).
socat -U \
  - UNIX-CONNECT:/tmp/hypr/"$HYPRLAND_INSTANCE_SIGNATURE"/.socket2.sock \
  | while read -r line; do handle "$line"; done

